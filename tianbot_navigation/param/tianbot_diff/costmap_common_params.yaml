max_obstacle_height: 2.0  # 2.0 by default assume something like an arm is mounted on top of the robot

# footprint included in another file so can be include according to the base model
#
footprint_padding: 0.01

obstacle_layer: 
  enabled: true
  observation_sources: scan #depth_scan depth_points lidar_points can be enable using env TIANBOT_OBS_SOURCES
  origin_z:             0.02
  z_resolution:         0.2
  z_voxels:             10
  unknown_threshold:    8
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  publish_voxel_map: true

  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    #    uncomment the following two lines when the observation source is pointcloud
    #    pay much attention to the range of the obstacles
    #    min_obstacle_height: 0.05
    #    max_obstacle_height: 0.55
  depth_scan:
    data_type: LaserScan
    topic: depth_scan
    marking: true
    clearing: true
  depth_points:
    data_type: PointCloud2
    topic: camera/depth/points
    marking: true
    clearing: true
    min_obstacle_height: 0.02
    expected_update_rate: 5
  lidar_points:
    data_type: PointCloud2
    topic: lidar_points
    marking: true
    clearing: true

  # for debugging only, let's you see the entire voxel grid

static_layer: 
  enabled:              true
  
